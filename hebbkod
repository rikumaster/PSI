#include <stdio.h>
#include <math.h>

const int NUMBER = 15; 

struct node {
	float weight[NUMBER];
};

int main() {
	float input[NUMBER], temp[NUMBER];
	float response = 0.0, lr = 1, sum = 1.0, signal = 0.0, sth = 0.0;
	int n, i, j, c = 0;
	struct node node1, node2, node3;
	int ilosc = 4;
	//wagi
	int epoch = 0;
	//WEKTORY

/*	node1.weight[0] = 1; node1.weight[1] = 0.7;
	float zbior[4][2] = { { 0,1 },{ 1.5,-1 },{ 1.2,-1.5 },{1.6, -1.5 } };*/

	//LITERY
	for (int i = 0; i < NUMBER; i++)
		node1.weight[i] = 1;
	float zbior[4][15] = { {1, -1, 1, -1, 1, -1, -1, -1, -1, -1, 1, -1, -1, 1, -1},
		{1, 1, 1, 1 - 1, 1, -1, 1, -1, -1, -1, -1, -1, 1, -1},
		 {-1 ,-1, -1, -1, 1, -1, -1, -1 - 1, -1, -1, -1 - 1, 1, -1},
		 {1, -1 ,1 ,1 - 1, 1, 1, -1, 1, 1, -1, 1, 1, -1, 1} };
	float d;

	//threshold value = 0, learning rate(lr) = 0.1, response = 0 */
	printf("Wagi na poczatku:");
		for (int i = 0; i < NUMBER; i++) {
			printf("%lf", node1.weight[i]);

		}
	while (epoch<100) {
		printf("\n-------NOWA EPOKA %i -------\n\n", epoch+1);

		//sum = 0.0;
		/* input values */
		
		for (int j = 0; j < ilosc; j++) {
			if (j == 0)
				printf("---Dane uczace--\n\n");
			/*if (j == 0)
				d = 1.0;
			else
				d = -1.0;*/
			
			if (j == 3)
				d = 1.0;
			else
				d = -1.0;
			
			for (i = 0; i < NUMBER; i++) {

				response += zbior[j][i] * node1.weight[i];
			}
			if (response < 0)
				signal = -1;
			else if (response > 0)
				signal = 1;
			if (j == 3)
				printf("--Dana testowa--\n\n");
			printf("Podaje ");
			for(int i=0; i< NUMBER; i++)
			printf("%lf ", zbior[j][i]);
			printf("\n\n");
			printf("Chce %lf\n", d);
			printf("Sygnal: %lf\n", signal);


			if (j < 3) {
			printf("\nNowe wagi: ");
			for (i = 0; i < NUMBER; i++) {
				temp[i] = node1.weight[i];
				node1.weight[i] = node1.weight[i] + lr * signal * zbior[j][i];
				printf("%f ", node1.weight[i], input[i]);

			}
		}
			/*
			for (i = 0; i < NUMBER; i++)
			sum = sum + (node1.weight[i] - temp[i]) * (node1.weight[i] - temp[i]);
			sum = sum / NUMBER;
			*/
			printf("\n\n");

			//	printf("Blad: %lf\n", sum);


			response = 0;

		}
		
		epoch++;
	}
	scanf_s("%f", &sth);
	return 0;
}
